<Window x:Class="OlimpiadaForYou.CreatorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OlimpiadaForYou"
        mc:Ignorable="d"
        Title="Личный кабинет - Создатель" Height="490" Width="800" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" Icon="/icon.png"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Window.Resources>
        <Style TargetType="ListView">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border Height="90" CornerRadius="20" BorderBrush="{x:Null}" BorderThickness="1" Background="White">
                            <ScrollViewer Width="210">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Press Start 2P"></Setter>
            <Setter Property="Foreground" Value="#FF370B0F"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border BorderBrush="#FF370B0F" BorderThickness="2" CornerRadius="15" Background="White">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Press Start 2P"/>
            <Setter Property="Foreground" Value="#FF370B0F"/>
            <Setter Property="FontSize" Value="12pt"/>
        </Style>

        <Style TargetType="Button">
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Press Start 2P"/>
            <Setter Property="Background" Value="#FF370B0F"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14pt"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="4" CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFE84526"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="PasswordBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border BorderBrush="#FF370B0F" BorderThickness="2" CornerRadius="15" Background="White">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Press Start 2P"/>
            <Setter Property="Foreground" Value="#FF370B0F"/>
            <Setter Property="FontSize" Value="12pt"/>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Foreground" Value="#FF370B0F"></Setter>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Press Start 2P"></Setter>
            <Setter Property="FontSize" Value="14pt"></Setter>
            <Setter Property="Width" Value="300"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="Padding" Value="10"></Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="White" Offset="0.0"/>
            <GradientStop Color="White" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="White"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="White"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="White"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#007EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" CornerRadius="20" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="/background.png"/>
    </Window.Background>
    <Grid VerticalAlignment="Top" Height="470">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="370"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0">
            <Button x:Name="but_Return" Click="but_Return_Click" HorizontalAlignment="Center" VerticalAlignment="Top" Width="150" Height="40" Content="Выйти" Margin="0,10,0,0" Cursor="Hand">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Press Start 2P"/>
                        <Setter Property="Background" Value="{x:Null}"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontSize" Value="14pt"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="4" CornerRadius="20">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFE84526"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Border BorderBrush="White" BorderThickness="5" CornerRadius="30" Width="320" Height="175" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0">
                <Border Background="White" BorderThickness="5" CornerRadius="30">
                    <StackPanel>
                        <TextBlock Text="Добро пожаловать," HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,15,0,0"></TextBlock>
                        <TextBlock x:Name="tb_NameTeacher" Text="Румянцева Анастасия Александровна" MaxWidth="300" TextAlignment="Center" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,5,0,0"></TextBlock>
                        <TextBlock Text="***" HorizontalAlignment="Center" Margin="0,10,0,0"></TextBlock>
                        <TextBlock Text="Что вы подготовили интересного для ваших учеников сегодня?" MaxWidth="300" TextAlignment="Center" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="0,10,0,0" FontSize="13"></TextBlock>
                    </StackPanel>
                </Border>
            </Border>
            <Border BorderBrush="White" BorderThickness="5" CornerRadius="30" Width="320" Height="175" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0">
                <Border Background="White" BorderThickness="5" CornerRadius="30">
                    <StackPanel>
                        <TextBlock Text="Хотите взглянуть на ваши олимпиады и тесты?" MaxWidth="300" Margin="0,20,0,0" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap"></TextBlock>
                        <TextBlock Text="Необходимо что-то исправить или отменить?" Margin="0,5,0,0" MaxWidth="300" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap"></TextBlock>
                        <TextBlock Cursor="Hand" MouseDown="ListOlimp_MouseDown" x:Name="ListOlimp" Text=" Смело нажимайте!" Margin="0,10,0,0" MaxWidth="300" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Foreground="#FFE44524" FontSize="16"></TextBlock>
                    </StackPanel>
                </Border>
            </Border>
        </StackPanel>
        <StackPanel Grid.Column="1">
            <Border Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" Width="350" Height="auto" Margin="0,40,0,0" BorderBrush="White" BorderThickness="5" CornerRadius="30">
                <Border Background="White" BorderThickness="5" CornerRadius="30" HorizontalAlignment="Stretch">
                    <StackPanel VerticalAlignment="Top" Height="auto">
                        <TextBlock Text="На ваши олимпиады записалось:" MaxWidth="330" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Top" TextWrapping="Wrap" Margin="0,15,0,0" FontSize="16"/>
                        <TextBlock x:Name="CountPeople" Text="123 ч." FontSize="16" TextAlignment="Center" HorizontalAlignment="Center" Margin="0,10,0,0"></TextBlock>
                        <TextBlock x:Name="FocusOn" Text="А именно:" FontSize="16" TextAlignment="Center" HorizontalAlignment="Center" Margin="0,10,0,0"></TextBlock>
                        <Grid Width="330" Height="110">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="60"/>
                            </Grid.ColumnDefinitions>
                            <Button Width="50" Height="50" Grid.Column="0" Visibility="Collapsed" x:Name="But_Back" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Click="But_Back_Click">
                                <Image Width="30" Source="image/previous.png"></Image>
                            </Button>
                            <ListView Grid.Column="1" HorizontalAlignment="Center" x:Name="lv_Olimp" Height="130">
                                <ListView.Resources>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Padding" Value="5"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListViewItem">
                                                    <Grid Width="200" Background="{TemplateBinding Background}">
                                                        <ContentPresenter />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.Resources>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Height="100">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="35"></RowDefinition>
                                                <RowDefinition Height="auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock VerticalAlignment="Top" FontSize="12" TextWrapping="Wrap" MaxWidth="360" Text="{Binding Title}" HorizontalAlignment="Center" FontFamily="Press Start 2P" TextAlignment="Center" />
                                            <StackPanel Orientation="Horizontal" Grid.Row="1">
                                                <TextBlock FontSize="18" VerticalAlignment="Center" x:Name="CountOlimp" Margin="70,5,0,0" Text="{Binding CountRegistered}" FontFamily="Press Start 2P" TextAlignment="Center" Grid.Row="1"/>
                                                <Button Grid.Row="1" HorizontalAlignment="Center" Margin="5 0 0 0" VerticalAlignment="Center" Width="35" Height="35">
                                                    <Image x:Name="ToLookInBut" MouseDown="ToLookInBut_MouseDown" HorizontalAlignment="Center" VerticalAlignment="Center" Source="/search.png" Width="25" Height="25"></Image>
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <TextBlock TextWrapping="Wrap" MaxWidth="330" TextAlignment="Center" x:Name="NoOlimpMessage" Text="Похоже, вы не создали ни одной олимпиады или желающих пока что нет!" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="30,10,0,0" Visibility="Collapsed"/>
                            <Button Width="50" Height="50" Grid.Column="2" Visibility="Collapsed" x:Name="But_Next" HorizontalAlignment="Center" VerticalAlignment="Center" Click="But_Next_Click">
                                <Image Width="30" Source="/image/next.png"></Image>
                            </Button>
                        </Grid>
                        <TextBlock x:Name="success" Text="Замечательный результат, но есть куда расти!" MaxWidth="300" HorizontalAlignment="Center" VerticalAlignment="Top" TextAlignment="Center" TextWrapping="Wrap" Margin="0,5,0,10" FontSize="12"></TextBlock>
                    </StackPanel>
                </Border>
            </Border>
            <Border Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" Width="350" Height="110" Margin="0,10,0,0" BorderBrush="White" BorderThickness="5" CornerRadius="30">
                <Border Background="#CCE24224" BorderThickness="5" CornerRadius="30">
                    <StackPanel>
                        <TextBlock Text="У вас есть новые идеи для олимпиады или теста?" Foreground="White" FontSize="14" Margin="0 10 0 0" HorizontalAlignment="Center" MaxWidth="330" TextAlignment="Center" TextWrapping="Wrap"></TextBlock>
                        <TextBlock x:Name="CreateNew" MouseDown="CreateNew_MouseDown" Cursor="Hand" Text="Поделитесь ими!" Foreground="White" FontSize="18" Margin="0 10 0 0" HorizontalAlignment="Center" MaxWidth="330" TextAlignment="Center" TextWrapping="Wrap"></TextBlock>
                    </StackPanel>
                </Border>
            </Border>
        </StackPanel>
    </Grid>
</Window>

<Window x:Class="OlimpiadaForYou.OlimpCreator"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OlimpiadaForYou"
        mc:Ignorable="d"
        Title="Список Олимпиад - Создатель" Height="490" Width="900" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" Background="#FF370B0F" Icon="/icon.png"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Window.Resources>
        <Style TargetType="ListView">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border Height="390" CornerRadius="20" BorderBrush="#FF110026" BorderThickness="1" Background="White">
                            <ScrollViewer Width="430">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Press Start 2P"></Setter>
            <Setter Property="Foreground" Value="#FF110026"></Setter>
            <Setter Property="FontSize" Value="14pt"></Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border BorderBrush="#FF110026" BorderThickness="2" CornerRadius="15" Background="White">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Press Start 2P"/>
            <Setter Property="Foreground" Value="#FF110026"/>
            <Setter Property="FontSize" Value="12pt"/>
        </Style>

        <Style TargetType="Button">
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Press Start 2P"/>
            <Setter Property="Background" Value="#FF370B0F"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14pt"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="4" CornerRadius="20">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFE84526"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="PasswordBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border BorderBrush="#FF110026" BorderThickness="2" CornerRadius="15" Background="White">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Press Start 2P"/>
            <Setter Property="Foreground" Value="#FF110026"/>
            <Setter Property="FontSize" Value="12pt"/>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Foreground" Value="#FF110026"></Setter>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Press Start 2P"></Setter>
            <Setter Property="FontSize" Value="14pt"></Setter>
            <Setter Property="Width" Value="300"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="Padding" Value="10"></Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="White" Offset="0.0"/>
            <GradientStop Color="White" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="White"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="White"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="White"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#007EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" CornerRadius="20" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid Height="470" VerticalAlignment="Top">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="277*"/>
            <ColumnDefinition Width="173*"/>
        </Grid.ColumnDefinitions>
        <StackPanel HorizontalAlignment="Center" Width="550" >
            <Image Source="/image/pattern.png"/>
        </StackPanel>
        <StackPanel Grid.Column="1">
            <TextBlock Text="Фильтры" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,20,0,0" FontSize="36" TextDecorations="Underline"></TextBlock>
            <TextBlock Text="Сложность:" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,20,0,0"></TextBlock>
            <ComboBox Template="{DynamicResource ComboBoxTemplate}" x:Name="cb_diff" Margin="0,5,0,0" HorizontalAlignment="Center"/>
            <TextBlock Text="Категория:" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,20,0,0"></TextBlock>
            <ComboBox x:Name="cb_cat" Template="{DynamicResource ComboBoxTemplate}" Margin="0,5,0,0" HorizontalAlignment="Center"/>
            <TextBlock Text="Предмет:" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,20,0,0"></TextBlock>
            <ComboBox x:Name="cb_sub" Template="{DynamicResource ComboBoxTemplate}" Margin="0,5,0,0" HorizontalAlignment="Center"/>
            <Button x:Name="but_Find" Click="but_Find_Click" HorizontalAlignment="Center" Margin="0,10,0,0" VerticalAlignment="Top" Content="Найти" Width="200" Height="40" Cursor="Hand"></Button>
            <Button x:Name="but_Remove" Click="but_Remove_Click" HorizontalAlignment="Center" Margin="0,5,0,0" VerticalAlignment="Top" Content="Очистить" Width="200" Height="40" Cursor="Hand" Visibility="Collapsed"></Button>
            <TextBlock Text="Хочешь вернуться?" Margin="0,10,0,0" Foreground="White" HorizontalAlignment="Center" FontSize="14"></TextBlock>
            <TextBlock Text="Нажми на меня!" Foreground="#FFE84526" HorizontalAlignment="Center" FontSize="14" Cursor="Hand" MouseDown="TextBlock_MouseDown"></TextBlock>
        </StackPanel>
        <Border HorizontalAlignment="Center" CornerRadius="20" VerticalAlignment="Top" Width="510" Height="420" Margin="0,20,0,0" BorderBrush="White" BorderThickness="5,5,5,5">
            <Border BorderBrush="#FF110026" BorderThickness="5,5,5,5" CornerRadius="15" Background="White">
                <StackPanel  HorizontalAlignment="Center" VerticalAlignment="Top" Width="500">
                    <ListView x:Name="lvList" Height="385" VerticalAlignment="Center">
                        <ListView.Resources>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Padding" Value="5"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <Grid Background="{TemplateBinding Background}">
                                                <ContentPresenter />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.Resources>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Width="410" Orientation="Vertical"></WrapPanel>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Width="400" Height="198">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0" Background="#FF370B0F"></TextBlock>
                                    <TextBlock Grid.Row="0" Background="#FF370B0F" Text="{Binding ID}" Visibility="Collapsed"></TextBlock>
                                    <TextBlock Grid.Row="0" Text="{Binding Title}" TextWrapping="Wrap" MaxWidth="350" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Press Start 2P" Foreground="White" FontSize="14"/>
                                    <Rectangle Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Height="155" Width="5" Fill="#FF110026" RadiusX="3" RadiusY="3" Margin="0,-10,0,0"/>
                                    <TextBlock Grid.Row="1"  HorizontalAlignment="Left" VerticalAlignment="Top" Margin="225,10,0,0" Height="90" Text="{Binding Description}" Padding="5" MaxWidth="170" TextAlignment="Center" TextWrapping="Wrap" FontFamily="Press Start 2P" FontSize="10"/>
                                    <TextBlock Grid.Row="1" Text="Продолжительность:" Margin="225 65 0 0" FontFamily="Press Start 2P" FontSize="9"></TextBlock>
                                    <TextBlock Grid.Row="1" Text="{Binding Duration}" Margin="225 75 0 0" FontFamily="Press Start 2P" FontSize="9"></TextBlock>
                                    <TextBlock Grid.Row="1" HorizontalAlignment="Left" Text="Сложность:" FontFamily="Press Start 2P" FontSize="9" Margin="10,10,0,0" VerticalAlignment="Top"></TextBlock>
                                    <TextBlock Grid.Row="1" HorizontalAlignment="Left" Text="{Binding Olimp_Difficulty.Title}" FontFamily="Press Start 2P" FontSize="9" Margin="10,20,0,0" VerticalAlignment="Top"></TextBlock>
                                    <TextBlock Grid.Row="1" HorizontalAlignment="Left" Text="Категория:" FontFamily="Press Start 2P" FontSize="9" Margin="10,40,0,0" VerticalAlignment="Top"></TextBlock>
                                    <TextBlock Grid.Row="1" HorizontalAlignment="Left" Text="{Binding Olimp_Class.Interval}" FontFamily="Press Start 2P" FontSize="9" Margin="10,50,0,0" VerticalAlignment="Top"></TextBlock>
                                    <TextBlock Grid.Row="1" HorizontalAlignment="Left" Text="Предмет:" FontFamily="Press Start 2P" FontSize="9" Margin="10,70,0,0" VerticalAlignment="Top"></TextBlock>
                                    <TextBlock Grid.Row="1" HorizontalAlignment="Left" Text="{Binding Olimp_Subject.Title}" FontFamily="Press Start 2P" FontSize="9" Margin="10,80,0,0" VerticalAlignment="Top"></TextBlock>
                                    <TextBlock Grid.Row="1" HorizontalAlignment="Left" Text="Дата проведения:" FontFamily="Press Start 2P" FontSize="9" Margin="10,100,0,0" VerticalAlignment="Top"></TextBlock>
                                    <TextBlock Grid.Row="1" HorizontalAlignment="Left" Text="{Binding DateOfEvent, StringFormat='{}{0:dd.MM.yyyy}'}" FontFamily="Press Start 2P" FontSize="9" Margin="10,110,0,0" VerticalAlignment="Top"></TextBlock>
                                    <TextBlock Grid.Row="1" HorizontalAlignment="Left" Text="Конец регистрации:" FontFamily="Press Start 2P" FontSize="9" Margin="10,130,0,0" VerticalAlignment="Top"></TextBlock>
                                    <TextBlock Grid.Row="1" HorizontalAlignment="Left" Text="{Binding DateOfEnd, StringFormat='{}{0:dd.MM.yyyy}'}" FontFamily="Press Start 2P" FontSize="9" Margin="10,140,0,0" VerticalAlignment="Top"></TextBlock>
                                    <Button x:Name="But_Upd" Content="Изменить" Click="But_Upd_Click" Cursor="Hand" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="225,90,0,0" FontSize="14" Width="150" Height="30" Foreground="White">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Press Start 2P"/>
                                                <Setter Property="Background" Value="#FF370B0F"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="FontSize" Value="14pt"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="4" CornerRadius="20">
                                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#FFE84526"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button x:Name="But_Del" Content="Отменить" Click="But_Del_Click" Cursor="Hand" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="225,115,0,0" FontSize="14" Width="150" Height="30" Foreground="White">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Press Start 2P"/>
                                                <Setter Property="Background" Value="#FF370B0F"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="FontSize" Value="14pt"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="4" CornerRadius="20">
                                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#FFE84526"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackPanel>
            </Border>
        </Border>
    </Grid>
</Window>
